/**
 * transpile second order JSON markov chain to C++ map-map-map form
 * Copyright (C) 2016 Alyssa Rosenzweig
 * ALL RIGHTS REVERSED
 */

const fs = require("fs"),
      chain = JSON.parse(fs.readFileSync(process.argv[2]).toString()),
      serialized = assign(serialize(chain));

console.log(serialized);

function assign(con) {
    return ["/* autogenerated output */",
            "/* feel free to edit </3 */",
            "",
            "#ifndef __MARKOV_CHAIN",
            "#define __MARKOV_CHAIN",
            "#include <map>",
            "typedef std::map<std::string, std::map<std::string, std::map<std::string, int>>> MarkovChain;",
            "MarkovChain __chain = \\",
            con + ";",
            "#endif"].join("\n");
}

function serialize(json) {
    if(typeof json === 'number') return json;
    if(typeof json === 'string') return JSON.stringify(json);
    if(typeof json === 'object') return map(json);

    console.error("*shrugs*");
}

function map(json) {
    return "{" + Object.keys(json).map(k => "{" + serialize(k) + "," + serialize(json[k]) + "}")
                                  .join(", \n") + "}";
}
